%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: erics-notes.dvi
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: Palatino-Roman Palatino-Bold
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o erics-notes.ps erics-notes.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2005.08.10:1422
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "30 October 2002",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
TeXDict begin 39139632 55387786 1000 600 600 (erics-notes.dvi)
@start /Fa 105[42 150[{TeXBase1Encoding ReEncodeFont}1
83.022 /Palatino-Bold rf /Fb 106[50 27[46 43 69 47 50
27 35 33 46 50 45 48 73 24 46 1[24 48 46 28 40 51 37
46 42 13[44 55 1[50 65 69 1[51 2[28 3[51 64 1[51 65 1[37
3[21 21 3[42 42 42 42 42 42 1[50 21 28 21 1[32 28 28
23 5[23 30[50 2[{TeXBase1Encoding ReEncodeFont}55 83.022
/Palatino-Roman rf /Fc 138[73 40 1[47 2[66 73 4[40 4[73
53 25[47 23[60 49[{TeXBase1Encoding ReEncodeFont}10 119.552
/Palatino-Bold rf /Fd 138[60 32 42 11[55 37[78 11[50
2[50 50 50 3[25 44[{TeXBase1Encoding ReEncodeFont}10
99.6264 /Palatino-Roman rf /Fe 135[30 2[35 19 25 23 2[32
34 1[17 2[17 1[32 1[28 1[26 32 29 32[43 17[15 46[{
TeXBase1Encoding ReEncodeFont}16 58.1154 /Palatino-Roman
rf /Ff 141[30 5[22 2[22 43 2[36 1[33 41 37 13[39 13[46
58 21[19 46[{TeXBase1Encoding ReEncodeFont}12 74.7198
/Palatino-Roman rf /Fg 135[74 2[87 47 61 57 1[86 78 83
127 3[42 1[80 1[69 88 64 14[88 7[88 6[88 2[88 112 19[48
5[40 39[{TeXBase1Encoding ReEncodeFont}21 143.462 /Palatino-Roman
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 493 880 a Fg(ABout)35 b(T)-8 b(ime)35
b(Linux)h(-)f(Eric's)f(dep)i(engine)g(notes)1613 1176
y Ff(Eric)18 b(D.)g(Schabell)1635 1292 y Fe(erics@abtlinux.or)o(g)1521
1488 y Fd(August)26 b(10,)f(2005)440 1850 y Fc(1)119
b(Introduction)440 2039 y Fb(A)20 b(few)h(things)h(they)f(need)f(to)h
(do:)544 2216 y(1.)41 b(get)20 b(to)h(know)h(abtlinux.or)o(g)f(and)f
(wiki.abtlinux.or)o(g.)544 2380 y(2.)41 b(become)20 b(members.)544
2544 y(3.)41 b(obtain)21 b(email)f(addr)o(ess)f(for)i(abtlinux.or)o(g,)
f(mail)h(me!)544 2708 y(4.)41 b(use)20 b(for)o(um)i(topic)f(for)f
(questions,)i(comments.)544 2872 y(5.)41 b(ir)o(c)20
b(on)h(fr)o(eenode.net)e(for)i(comments)h(\(low)-8 b(,)21
b(erics\).)544 3035 y(6.)41 b(in)21 b(english,)g(use)g(latex,)f(see)h
(template)f(for)g(doc,)h(cases)f(en)h(scenarios.)565
3212 y(A)f(few)g(r)o(equir)o(ements)h(I)f(have:)556 3389
y(\225)42 b(dependency)20 b(will)h(specify)g(a)f(version)h(\(or)g(use)f
(default?\))556 3553 y(\225)42 b(dependencies)20 b(will)h(be)g(or)o
(der)o(ed)d(for)j(a)f(corr)o(ect)g(build)g(pr)o(ocess)h(\(dep)f
(engine!\))556 3717 y(\225)42 b(support)21 b(build-time)f(and)h(r)o
(un-time)g(dependencies:)747 3896 y Fa(\226)41 b Fb(a)20
b(buildDep)h(is)g(a)g(dependency)f(needed)f(to)j(build)e(some)i
(package.)747 4027 y Fa(\226)41 b Fb(RELIES)28 b(ON)h(\(RO\))f(-)h('A)
-6 b(')28 b(RO)h('B';)g(then)g('A)-6 b(')28 b(will)h(be)f(r)o(ebuilt)g
(if)h('B')f(con\002g)830 4126 y(changes.)747 4257 y Fa(\226)41
b Fb(DEPENDS)19 b(ON)g(\(DO\))g(-)g('A)-6 b(')19 b(DO)g('B';)g(then)g
('A)-6 b(')19 b(will)h(be)f(r)o(ebuilt)f(anytime)h('B')830
4357 y(is)i(r)o(ebuilt.)747 4487 y Fa(\226)41 b Fb(leads)20
b(to)h(several)f(types)h(of)g(depends:)912 4647 y(*)985
4625 y(permanently)g(r)o(elies)f(on)912 4762 y(*)985
4740 y(permanently)h(depends)f(on)912 4877 y(*)985 4855
y(optionally)i(r)o(elies)e(on)912 4992 y(*)985 4970 y(optionally)i
(depends)e(on)556 5150 y(\225)42 b(pr)o(event)19 b(r)o(emoval)h(of)h
(packages)f(with)h(DEPENDS)g(ON)g(\(DO\))f(dependencies.)556
5313 y(\225)42 b(auto)25 b(add)g(packages)g(with)h(RELIES)f(ON)h
(\(RO\))g(dependencies)f(to)h(build)g(queue)648 5413
y(if)20 b(user)h(r)o(ebuilds)f(a)g(package)g(that)g(r)o(elies)g(on)i
(it.)1851 5662 y(1)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 556 531 a Fb(\225)42 b(check)c(for)f(possible)i
(dependency)e(br)o(eakage)f(for)i(a)f(package,)k(both)e(up)f(and)648
631 y(down)21 b(the)g(dependency)f(tr)o(ee.)556 797 y(\225)42
b(generate)19 b(the)i(dependency)f(tr)o(ee)g(for)h(given)g(package,)e
(both)i(up)g(and)f(down.)556 963 y(\225)42 b(pr)o(ovide)19
b(count)j(of)f(packages)e(dependent)h(on)i(a)e(given)h(package.)556
1129 y(\225)42 b(pr)o(ovide)19 b(count)j(of)f(packages)e(a)i(given)g
(package)e(is)i(dependent)g(on.)556 1295 y(\225)42 b(pr)o(ovide)19
b(list)j(of)e(packages)g(installed)h(w/o)h(any)e(depencencies.)556
1461 y(\225)42 b(log)21 b(dependency)f(engine)h(actions.)1851
5662 y(2)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
